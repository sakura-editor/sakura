//このファイルから、Funccode_define.h と Funccode_enum.h が生成されます。

//	コマンドコード
//
//	エディタ内部で使われるコマンド番号．16bitの数値．
//
//	Windows 95では32768以上のコマンドをメニューやアクセラレータに設定すると
//	動作しない．
//
//  20000-21999 : プラグインコマンド機能番号（20個×100）
//	30000-32767 : 機能番号．メニューやキーに割り当てられる．
//	32768-39999 : メニューからは直接呼ばれないが、他のIDから間接的に呼ばれる機能
//	40000-49511 : マクロ関数
//	49512-      : 変換コマンド．状況に応じて機能を置き換える場合に用いる
//
//	HandleCommandの引数としては32bit幅だが，上位16bitはコマンドが送られた状況を
//	通知するために使用する．
//
//	[参考]
//	10000- : ウィンドウ一覧で使用する
//	11000- : 最近使ったファイルで使用する
//	12000- : 最近使ったフォルダーで使用する

#define FUNC_PRAGMA_ONCE #pragma once
FUNC_PRAGMA_ONCE

#if defined(FUNC_CODE_DEFINE)
#define FUNC_DEFINE #define
#define FUNC_CODE(a, b) FUNC_DEFINE a b
#elif defined(FUNC_CODE_ENUM)
#define FUNC_CODE(a, b) a = b,
enum EFunctionCode{
#else
#error
#endif

//aliases
FUNC_CODE(F_INVALID, -1)
FUNC_CODE(F_DEFAULT, 0)
FUNC_CODE(F_0, 0)

// 未定義用(ダミーとしても使う) 	//Oct. 17, 2000 jepro noted
FUNC_CODE(F_DISABLE, 0)	//未使用
FUNC_CODE(F_NODE, 0)	//ノード(Main Menu用)
FUNC_CODE(F_SEPARATOR, 1)	//セパレータ
FUNC_CODE(F_TOOLBARWRAP, 2)	//ツールバー折返
FUNC_CODE(F_MACRO_EXTRA, 2)	//外部マクロ（50番以上）
FUNC_CODE(F_PLUGCOMMAND, 3)	//プラグイン
FUNC_CODE(F_DUMMY_MAX_CODE, 10)	//特別10である必要はないけど 10まで予約

//	2007.07.07 genta 状況通知フラグ
//	コマンドが送られた状況をコマンドと併せて通知する．
FUNC_CODE(FA_FROMKEYBOARD, 0x00010000)	//!< キーボードアクセラレータからのコマンド
FUNC_CODE(FA_FROMMACRO, 0x00020000)	//!< マクロからのコマンド実行
FUNC_CODE(FA_NONRECORD, 0x00040000)	//!< マクロへの記録を抑制する

FUNC_CODE(F_PLUGCOMMAND_FIRST, 20000)
FUNC_CODE(F_PLUGCOMMAND_LAST, 21999)

// Main Menu 特殊機能
FUNC_CODE(F_WINDOW_LIST, 29001)	// ウィンドウリスト
FUNC_CODE(F_FILE_USED_RECENTLY, 29002)	// 最近使ったファイル
FUNC_CODE(F_FOLDER_USED_RECENTLY, 29003)	// 最近使ったフォルダー
FUNC_CODE(F_CUSTMENU_LIST, 29004)	// カスタムメニューリスト
FUNC_CODE(F_USERMACRO_LIST, 29005)	// 登録済みマクロリスト
FUNC_CODE(F_PLUGIN_LIST, 29006)	// プラグインコマンドリスト
FUNC_CODE(F_SPECIAL_FIRST, F_WINDOW_LIST)
FUNC_CODE(F_SPECIAL_LAST, F_PLUGIN_LIST)

FUNC_CODE(F_MENU_FIRST, 30000)

// ファイル操作系
//											[意味]								[引数]
FUNC_CODE(F_FILENEW, 30101)	//新規作成							なし
FUNC_CODE(F_FILEOPEN, 30102)	//開く								const WCHAR* path
FUNC_CODE(F_FILESAVE, 30103)	//上書き保存						なし
FUNC_CODE(F_FILESAVEAS_DIALOG, 30104)	//名前を付けて保存					なし
FUNC_CODE(F_FILESAVEAS, 30106)	//名前を付けて保存					const WCHAR* path
FUNC_CODE(F_FILECLOSE, 30105)	//閉じて(無題)						なし
FUNC_CODE(F_FILECLOSE_OPEN, 30107)	//閉じて開く						なし
FUNC_CODE(F_FILEOPEN_DROPDOWN, 30108)	//開く(ドロップダウン)				const WCHAR* path
FUNC_CODE(F_FILESAVECLOSE, 30109)	//保存して閉じる					なし
FUNC_CODE(F_FILENEW_NEWWINDOW, 30110)	//新規作成（新しいウインドウで開く）
FUNC_CODE(F_FILE_REOPEN_SJIS, 30111)	//SJISで開き直す					bool bNoConfirm
FUNC_CODE(F_FILE_REOPEN_JIS, 30112)	//JISで開き直す						bool bNoConfirm
FUNC_CODE(F_FILE_REOPEN_EUC, 30113)	//EUCで開き直す						bool bNoConfirm
FUNC_CODE(F_FILE_REOPEN_UNICODE, 30114)	//Unicodeで開き直す					bool bNoConfirm
FUNC_CODE(F_FILE_REOPEN_UTF8, 30115)	//UTF-8で開き直す					bool bNoConfirm
FUNC_CODE(F_FILE_REOPEN_UTF7, 30116)	//UTF-7で開き直す					bool bNoConfirm
FUNC_CODE(F_FILE_REOPEN_UNICODEBE, 30117)	//UnicodeBEで開き直す				bool bNoConfirm
FUNC_CODE(F_FILE_REOPEN_CESU8, 30118)	//CESU-8で開き直す					bool bNoConform
FUNC_CODE(F_FILE_REOPEN, 30119)	//現在と同じ文字コードで開き直す	bool bNoConfirm
FUNC_CODE(F_FILESAVEALL, 30120)	//すべて上書き保存					なし
FUNC_CODE(F_FILESAVE_QUIET, 30121)	//上書き保存(限定動作)				なし
FUNC_CODE(F_FILE_REOPEN_LATIN1, 30122)	//Latin1で開き直す					bool bNoConform	// 2010/3/20 Uchi
FUNC_CODE(F_PRINT, 30150)	//印刷								なし
FUNC_CODE(F_PRINT_PREVIEW, 30151)	//印刷プレビュー					なし
FUNC_CODE(F_PRINT_PAGESETUP, 30152)	//印刷ページ設定					なし
//FUNC_CODE(F_PRINT_DIALOG, 30151)	//印刷ダイアログ					？
//FUNC_CODE(F_OPEN_HHPP, 30160)	//同名のC/C++ヘッダーファイルを開く	bool bCheckOnly	// del	2008/6/23 Uchi
//FUNC_CODE(F_OPEN_CCPP, 30161)	//同名のC/C++ソースファイルを開く	bool bCheckOnly	// del	2008/6/23 Uchi
FUNC_CODE(F_OPEN_HfromtoC, 30162)	//同名のC/C++ヘッダー(ソース)を開く	bool bCheckOnly
FUNC_CODE(F_ACTIVATE_SQLPLUS, 30170)	//Oracle SQL*Plusをアクティブ表示	なし
FUNC_CODE(F_PLSQL_COMPILE_ON_SQLPLUS, 30171)	//Oracle SQL*Plusで実行				なし
FUNC_CODE(F_BROWSE, 30180)	//ブラウズ							なし
FUNC_CODE(F_VIEWMODE, 30185)	//ビューモード						なし
FUNC_CODE(F_PROPERTY_FILE, 30190)	//ファイルのプロパティ				なし
FUNC_CODE(F_PROFILEMGR, 30191)	//プロファイルマネージャ			なし
FUNC_CODE(F_EXITALLEDITORS, 30194)	//編集の全終了						なし
FUNC_CODE(F_EXITALL, 30195)	//サクラエディタの全終了			なし
FUNC_CODE(F_OPEN_FOLDER_IN_EXPLORER, 30196)	//ファイルの場所を開く
FUNC_CODE(F_OPEN_COMMAND_PROMPT, 30197)	//コマンドプロンプトを開く
FUNC_CODE(F_OPEN_COMMAND_PROMPT_AS_ADMIN, 30198)	//管理者としてコマンドプロンプトを開く
FUNC_CODE(F_OPEN_POWERSHELL, 31456)	//PowerShellを開く
FUNC_CODE(F_OPEN_POWERSHELL_AS_ADMIN, 31457)	//管理者としてPowerShellを開く

// 編集系
FUNC_CODE(F_WCHAR, 30200)	//文字入力									WCHAR c
FUNC_CODE(F_IME_CHAR, 30201)	//全角文字入力								WORD c
FUNC_CODE(F_UNDO, 30210)	//元に戻す(Undo)							なし
FUNC_CODE(F_REDO, 30211)	//やり直し(Redo)							なし
FUNC_CODE(F_DELETE, 30221)	//削除										なし
FUNC_CODE(F_DELETE_BACK, 30222)	//カーソル前を削除							なし
FUNC_CODE(F_WordDeleteToStart, 30230)	//単語の左端まで削除						なし
FUNC_CODE(F_WordDeleteToEnd, 30231)	//単語の右端まで削除						なし
FUNC_CODE(F_WordCut, 30232)	//単語切り取り								なし
FUNC_CODE(F_WordDelete, 30233)	//単語削除									なし
FUNC_CODE(F_LineCutToStart, 30240)	//行頭まで切り取り(改行単位)				なし
FUNC_CODE(F_LineCutToEnd, 30241)	//行末まで切り取り(改行単位)				なし
FUNC_CODE(F_LineDeleteToStart, 30242)	//行頭まで削除(改行単位)					なし
FUNC_CODE(F_LineDeleteToEnd, 30243)	//行末まで削除(改行単位)					なし
FUNC_CODE(F_CUT_LINE, 30244)	//行切り取り(折り返し単位)					なし
FUNC_CODE(F_DELETE_LINE, 30245)	//行削除(折り返し単位)						なし
FUNC_CODE(F_DUPLICATELINE, 30250)	//行の二重化(折り返し単位)					なし
FUNC_CODE(F_INDENT_TAB, 30260)	//TABインデント								なし
FUNC_CODE(F_UNINDENT_TAB, 30261)	//逆TABインデント							なし
FUNC_CODE(F_INDENT_SPACE, 30262)	//SPACEインデント							なし
FUNC_CODE(F_UNINDENT_SPACE, 30263)	//逆SPACEインデント							なし
//FUNC_CODE(F_WORDSREFERENCE, 30270)	//単語リファレンス							なし？
FUNC_CODE(F_LTRIM, 30280)	//左(先頭)の空白を削除						なし
FUNC_CODE(F_RTRIM, 30281)	//右(末尾)の空白を削除						なし
FUNC_CODE(F_SORT_ASC, 30282)	//選択行の昇順ソート						なし
FUNC_CODE(F_SORT_DESC, 30283)	//選択行の降順ソート						なし
FUNC_CODE(F_MERGE, 30284)	//選択行のマージ							なし
FUNC_CODE(F_RECONVERT, 30285)	//再変換									なし


// カーソル移動系
FUNC_CODE(F_UP, 30311)	//カーソル上移動							なし
FUNC_CODE(F_DOWN, 30312)	//カーソル下移動							なし
FUNC_CODE(F_LEFT, 30313)	//カーソル左移動							なし
FUNC_CODE(F_RIGHT, 30314)	//カーソル右移動							なし
FUNC_CODE(F_UP2, 30315)	//カーソル上移動(２行ごと)					なし
FUNC_CODE(F_DOWN2, 30316)	//カーソル下移動(２行ごと)					なし
FUNC_CODE(F_WORDLEFT, 30320)	//単語の左端に移動							なし
FUNC_CODE(F_WORDRIGHT, 30321)	//単語の右端に移動							なし
//FUNC_CODE(F_GOLINETOP, 30330)	//行頭に移動(改行単位)						？
//FUNC_CODE(F_GOLINEEND, 30331)	//行末に移動(改行単位)						？
FUNC_CODE(F_GOLINETOP, 30332)	//行頭に移動(折り返し単位)					int param
FUNC_CODE(F_GOLINEEND, 30333)	//行末に移動(折り返し単位)					なし
//FUNC_CODE(F_ROLLDOWN, 30340)	//スクロールダウン							なし？
//FUNC_CODE(F_ROLLUP, 30341)	//スクロールアップ							なし？
FUNC_CODE(F_HalfPageUp, 30340)	//半ページアップ							なし
FUNC_CODE(F_HalfPageDown, 30341)	//半ページダウン							なし
FUNC_CODE(F_1PageUp, 30342)	//１ページアップ							なし
FUNC_CODE(F_1PageDown, 30343)	//１ページダウン							なし
//FUNC_CODE(F_DISPLAYTOP, 30344)	//画面の先頭に移動(未実装)					？
//FUNC_CODE(F_DISPLAYEND, 30345)	//画面の最後に移動(未実装)					？
FUNC_CODE(F_GOFILETOP, 30350)	//ファイルの先頭に移動						なし
FUNC_CODE(F_GOFILEEND, 30351)	//ファイルの最後に移動						なし
FUNC_CODE(F_CURLINECENTER, 30360)	//カーソル行をウィンドウ中央へ				なし
FUNC_CODE(F_CURLINETOP, 30361)	//カーソル行をウィンドウ上部へ				なし
FUNC_CODE(F_CURLINEBOTTOM, 30362)	//カーソル行をウィンドウ下部へ				なし
FUNC_CODE(F_JUMPHIST_PREV, 30370)	//移動履歴: 前へ							なし
FUNC_CODE(F_JUMPHIST_NEXT, 30371)	//移動履歴: 次へ							なし
FUNC_CODE(F_JUMPHIST_SET, 30372)	//現在位置を移動履歴に登録					なし
FUNC_CODE(F_WndScrollDown, 30380)	//テキストを１行下へスクロール				なし
FUNC_CODE(F_WndScrollUp, 30381)	//テキストを１行上へスクロール				なし
FUNC_CODE(F_GONEXTPARAGRAPH, 30382)	//次の段落へ								なし
FUNC_CODE(F_GOPREVPARAGRAPH, 30383)	//前の段落へ								なし
FUNC_CODE(F_AUTOSCROLL, 30384)	//オートスクロール
FUNC_CODE(F_WHEEL_FIRST, 30385)
FUNC_CODE(F_WHEELUP, 30385)	//ホイールアップ								int zDelta
FUNC_CODE(F_WHEELDOWN, 30386)	//ホイールダウン								int zDelta
FUNC_CODE(F_WHEELLEFT, 30387)	//ホイール左								int zDelta
FUNC_CODE(F_WHEELRIGHT, 30388)	//ホイール右								int zDelta
FUNC_CODE(F_WHEELPAGEUP, 30389)	//ホイールページアップ						int zDelta
FUNC_CODE(F_WHEELPAGEDOWN, 30390)	//ホイールページダウン						int zDelta
FUNC_CODE(F_WHEELPAGELEFT, 30391)	//ホイールページ左							int zDelta
FUNC_CODE(F_WHEELPAGERIGHT, 30392)	//ホイールページ右							int zDelta
FUNC_CODE(F_WHEEL_LAST, 30392)
FUNC_CODE(F_MODIFYLINE_NEXT, 30393)	//次の変更行へ								なし
FUNC_CODE(F_MODIFYLINE_PREV, 30394)	//前の変更行へ								なし

// 選択系
FUNC_CODE(F_SELECTWORD, 30400)	//現在位置の単語選択						なし
FUNC_CODE(F_SELECTALL, 30401)	//すべて選択								なし
FUNC_CODE(F_SELECTLINE, 30403)	//1行選択									int param	// 2007.10.06 nasukoji
FUNC_CODE(F_BEGIN_SEL, 30410)	//範囲選択開始								なし
FUNC_CODE(F_UP_SEL, 30411)	//(範囲選択)カーソル上移動					int lines
FUNC_CODE(F_DOWN_SEL, 30412)	//(範囲選択)カーソル下移動					なし
FUNC_CODE(F_LEFT_SEL, 30413)	//(範囲選択)カーソル左移動					なし
FUNC_CODE(F_RIGHT_SEL, 30414)	//(範囲選択)カーソル右移動					なし
FUNC_CODE(F_UP2_SEL, 30415)	//(範囲選択)カーソル上移動(２行ごと)		なし
FUNC_CODE(F_DOWN2_SEL, 30416)	//(範囲選択)カーソル下移動(２行ごと)		なし
FUNC_CODE(F_WORDLEFT_SEL, 30420)	//(範囲選択)単語の左端に移動				なし
FUNC_CODE(F_WORDRIGHT_SEL, 30421)	//(範囲選択)単語の右端に移動				なし
//FUNC_CODE(F_GOLINETOP_SEL, 30430)	//(範囲選択)行頭に移動(改行単位)			？
//FUNC_CODE(F_GOLINEEND_SEL, 30431)	//(範囲選択)行末に移動(改行単位)			？
FUNC_CODE(F_GOLINETOP_SEL, 30432)	//(範囲選択)行頭に移動(折り返し単位)		なし
FUNC_CODE(F_GOLINEEND_SEL, 30433)	//(範囲選択)行末に移動(折り返し単位)		なし
//FUNC_CODE(F_ROLLDOWN_SEL, 30440)	//(範囲選択)スクロールダウン				なし？
//FUNC_CODE(F_ROLLUP_SEL, 30441)	//(範囲選択)スクロールアップ				なし？
FUNC_CODE(F_HalfPageUp_Sel, 30440)	//(範囲選択)半ページアップ					なし
FUNC_CODE(F_HalfPageDown_Sel, 30441)	//(範囲選択)半ページダウン					なし
FUNC_CODE(F_1PageUp_Sel, 30442)	//(範囲選択)１ページアップ					なし
FUNC_CODE(F_1PageDown_Sel, 30443)	//(範囲選択)１ページダウン					なし
//FUNC_CODE(F_DISPLAYTOP_SEL, 30444)	//(範囲選択)画面の先頭に移動(未実装)		？
//FUNC_CODE(F_DISPLAYEND_SEL, 30445)	//(範囲選択)画面の最後に移動(未実装)		？
FUNC_CODE(F_GOFILETOP_SEL, 30450)	//(範囲選択)ファイルの先頭に移動			なし
FUNC_CODE(F_GOFILEEND_SEL, 30451)	//(範囲選択)ファイルの最後に移動			なし
FUNC_CODE(F_GONEXTPARAGRAPH_SEL, 30482)	//(範囲選択)次の段落へ					なし
FUNC_CODE(F_GOPREVPARAGRAPH_SEL, 30483)	//(範囲選択)前の段落へ					なし
FUNC_CODE(F_MODIFYLINE_NEXT_SEL, 30484)	//(範囲選択)次の変更行へ					なし
FUNC_CODE(F_MODIFYLINE_PREV_SEL, 30485)	//(範囲選択)前の変更行へ					なし


// 矩形選択系
//FUNC_CODE(F_BOXSELALL, 30500)	//矩形ですべて選択
FUNC_CODE(F_BEGIN_BOX, 30510)	//矩形範囲選択開始						なし
//Oct. 17, 2000 JEPRO 以下に矩形選択のコマンド名のみ準備しておいた
FUNC_CODE(F_UP_BOX, 30511)	//(矩形選択)カーソル上移動
FUNC_CODE(F_DOWN_BOX, 30512)	//(矩形選択)カーソル下移動
FUNC_CODE(F_LEFT_BOX, 30513)	//(矩形選択)カーソル左移動
FUNC_CODE(F_RIGHT_BOX, 30514)	//(矩形選択)カーソル右移動
FUNC_CODE(F_UP2_BOX, 30515)	//(矩形選択)カーソル上移動(２行ごと)
FUNC_CODE(F_DOWN2_BOX, 30516)	//(矩形選択)カーソル下移動(２行ごと)
FUNC_CODE(F_WORDLEFT_BOX, 30520)	//(矩形選択)単語の左端に移動
FUNC_CODE(F_WORDRIGHT_BOX, 30521)	//(矩形選択)単語の右端に移動
FUNC_CODE(F_GOLOGICALLINETOP_BOX, 30530)	//(矩形選択)行頭に移動(改行単位)
//FUNC_CODE(F_GOLOGICALLINEEND_BOX, 30531)	//(矩形選択)行末に移動(改行単位)
FUNC_CODE(F_GOLINETOP_BOX, 30532)	//(矩形選択)行頭に移動(折り返し単位)
FUNC_CODE(F_GOLINEEND_BOX, 30533)	//(矩形選択)行末に移動(折り返し単位)
FUNC_CODE(F_HalfPageUp_BOX, 30540)	//(矩形選択)半ページアップ
FUNC_CODE(F_HalfPageDown_BOX, 30541)	//(矩形選択)半ページダウン
FUNC_CODE(F_1PageUp_BOX, 30542)	//(矩形選択)１ページアップ
FUNC_CODE(F_1PageDown_BOX, 30543)	//(矩形選択)１ページダウン
//FUNC_CODE(F_DISPLAYTOP_BOX, 30444)	//(矩形選択)画面の先頭に移動(未実装)
//FUNC_CODE(F_DISPLAYEND_BOX, 30445)	//(矩形選択)画面の最後に移動(未実装)
FUNC_CODE(F_GOFILETOP_BOX, 30550)	//(矩形選択)ファイルの先頭に移動
FUNC_CODE(F_GOFILEEND_BOX, 30551)	//(矩形選択)ファイルの最後に移動


// クリップボード系
FUNC_CODE(F_CUT, 30601)	//切り取り(選択範囲をクリップボードにコピーして削除)	なし
FUNC_CODE(F_COPY, 30602)	//コピー(選択範囲をクリップボードにコピー)				なし
FUNC_CODE(F_COPY_ADDCRLF, 30608)	//折り返し位置に改行をつけてコピー						なし
FUNC_CODE(F_COPY_CRLF, 30603)	//CRLF改行でコピー										なし
FUNC_CODE(F_PASTE, 30604)	//貼り付け(クリップボードから貼り付け)					なし
FUNC_CODE(F_PASTEBOX, 30605)	//矩形貼り付け(クリップボードから矩形貼り付け)			なし

//2007.09.18 kobake WCHARを求めるメッセージのメッセージ名を変更: 「*」→「*_W」
FUNC_CODE(F_INSTEXT_W, 30606)	//テキストを貼り付け							const WCHAR* text, bool bNoWaitCursor
FUNC_CODE(F_ADDTAIL_W, 30607)	//最後にテキストを追加							const WCHAR* text, int length
FUNC_CODE(F_COPYLINES, 30610)	//選択範囲内全行コピー							なし
FUNC_CODE(F_COPYLINESASPASSAGE, 30611)	//選択範囲内全行引用符付きコピー				なし
FUNC_CODE(F_COPYLINESWITHLINENUMBER, 30612)	//選択範囲内全行行番号付きコピー				なし
FUNC_CODE(F_COPY_COLOR_HTML, 30613)	//選択範囲内色付きHTMLコピー					なし
FUNC_CODE(F_COPY_COLOR_HTML_LINENUMBER, 30614)	//選択範囲内行番号色付きHTMLコピー		なし
FUNC_CODE(F_COPYPATH, 30620)	//このファイルのパス名をクリップボードにコピー	なし
FUNC_CODE(F_COPYTAG, 30621)	//このファイルのパス名とカーソル位置をコピー	なし
FUNC_CODE(F_COPYFNAME, 30622)	//このファイル名をクリップボードにコピー		なし
FUNC_CODE(F_CREATEKEYBINDLIST, 30630)	//キー割り当て一覧をコピー						なし
FUNC_CODE(F_COPYDIRPATH, 30631)	//このファイルのフォルダー名をクリップボードにコピー	なし


// 挿入系
FUNC_CODE(F_INS_DATE, 30790)	//日付挿入										なし
FUNC_CODE(F_INS_TIME, 30791)	//時刻挿入										なし
FUNC_CODE(F_CTRL_CODE_DIALOG, 30792)	//コントロールコードの入力(ダイアログ)			なし
FUNC_CODE(F_CTRL_CODE, 30793)	//コントロールコードの入力						wchar_t code
FUNC_CODE(F_INS_FILE_USED_RECENTLY, 30794)	// 最近使ったファイル挿入
FUNC_CODE(F_INS_FOLDER_USED_RECENTLY, 30795)	// 最近使ったフォルダー挿入


// 変換系
FUNC_CODE(F_TOLOWER, 30800)	//小文字							なし
FUNC_CODE(F_TOUPPER, 30801)	//大文字							なし
FUNC_CODE(F_TOHANKAKU, 30810)	//全角→半角 						なし
FUNC_CODE(F_TOHANKATA, 30817)	//全角カタカナ→半角カタカナ		なし
FUNC_CODE(F_TOZENKAKUKATA, 30811)	//半角＋全ひら→全角・カタカナ		なし
FUNC_CODE(F_TOZENKAKUHIRA, 30812)	//半角＋全カタ→全角・ひらがな		なし
FUNC_CODE(F_HANKATATOZENKATA, 30813)	//半角カタカナ→全角カタカナ		なし
FUNC_CODE(F_HANKATATOZENHIRA, 30814)	//半角カタカナ→全角ひらがな		なし
FUNC_CODE(F_TOZENEI, 30815)	//半角英数→全角英数				なし
FUNC_CODE(F_TOHANEI, 30816)	//全角英数→半角英数				なし
FUNC_CODE(F_TABTOSPACE, 30830)	//TAB→空白 						なし
FUNC_CODE(F_SPACETOTAB, 30831)	//空白→TAB							なし
FUNC_CODE(F_CODECNV_AUTO2SJIS, 30850)	//自動判別→SJISコード変換 			なし
FUNC_CODE(F_CODECNV_EMAIL, 30851)	//E-Mail(JIS→SJIS)コード変換		なし
FUNC_CODE(F_CODECNV_EUC2SJIS, 30852)	//EUC→SJISコード変換				なし
FUNC_CODE(F_CODECNV_UNICODE2SJIS, 30853)	//Unicode→SJISコード変換			なし
FUNC_CODE(F_CODECNV_UNICODEBE2SJIS, 30856)	//UnicodeBE→SJISコード変換			なし
FUNC_CODE(F_CODECNV_UTF82SJIS, 30854)	//UTF-8→SJISコード変換 			なし
FUNC_CODE(F_CODECNV_UTF72SJIS, 30855)	//UTF-7→SJISコード変換 			なし
FUNC_CODE(F_CODECNV_SJIS2JIS, 30860)	//SJIS→JISコード変換 				なし
FUNC_CODE(F_CODECNV_SJIS2EUC, 30861)	//SJIS→EUCコード変換 				なし
FUNC_CODE(F_CODECNV_SJIS2UTF8, 30862)	//SJIS→UTF-8コード変換 			なし
FUNC_CODE(F_CODECNV_SJIS2UTF7, 30863)	//SJIS→UTF-7コード変換 			なし
FUNC_CODE(F_BASE64DECODE, 30870)	//Base64デコードして保存			なし
FUNC_CODE(F_UUDECODE, 30880)	//uudecodeして保存					なし


// 検索系 
FUNC_CODE(F_SEARCH_DIALOG, 30901)	//検索(単語検索ダイアログ)						なし
FUNC_CODE(F_SEARCH_NEXT, 30902)	//次を検索										HWND hwnd, const WCHAR* text
FUNC_CODE(F_SEARCH_PREV, 30903)	//前を検索										HWND hwnd
FUNC_CODE(F_REPLACE_DIALOG, 30904)	//置換(置換ダイアログ)							なし
FUNC_CODE(F_REPLACE, 30906)	//置換(実行)									HWND hwnd
FUNC_CODE(F_REPLACE_ALL, 30907)	//すべて置換(実行)								なし
FUNC_CODE(F_SEARCH_CLEARMARK, 30905)	//検索マークの切替え							なし
FUNC_CODE(F_JUMP_SRCHSTARTPOS, 30909)	//検索開始位置へ戻る							なし
FUNC_CODE(F_SEARCH_BOX, 30908)	//検索(ボックス)								なし
FUNC_CODE(F_GREP_DIALOG, 30910)	//Grep											なし
FUNC_CODE(F_GREP, 30911)	//Grep											なし
FUNC_CODE(F_GREP_REPLACE_DLG, 30912)	//Grep置換										なし
FUNC_CODE(F_GREP_REPLACE, 30913)	//Grep置換										なし
FUNC_CODE(F_JUMP_DIALOG, 30920)	//指定行へジャンプ								なし
FUNC_CODE(F_JUMP, 30921)	//指定行へジャンプ								なし
FUNC_CODE(F_OUTLINE, 30930)	//アウトライン解析								int nAction
FUNC_CODE(F_OUTLINE_TOGGLE, 30931)	//アウトライン解析(toggle)						なし
FUNC_CODE(F_TAGJUMP, 30940)	//タグジャンプ									bool bClose
FUNC_CODE(F_TAGJUMPBACK, 30941)	//タグジャンプバック							なし
FUNC_CODE(F_TAGJUMP_LIST, 30942)	//タグジャンプリスト							？
FUNC_CODE(F_TAGS_MAKE, 30943)	//タグファイルの作成							なし
FUNC_CODE(F_DIRECT_TAGJUMP, 30944)	//ダイレクトタグジャンプ						なし
FUNC_CODE(F_TAGJUMP_CLOSE, 30945)	//閉じてタグジャンプ(元ウィンドウclose)			なし
FUNC_CODE(F_TAGJUMP_KEYWORD, 30946)	//キーワードを指定してダイレクトタグジャンプ	const WCHAR* keyword
FUNC_CODE(F_COMPARE, 30950)	//ファイル内容比較								なし
FUNC_CODE(F_BRACKETPAIR, 30960)	//対括弧の検索									なし
FUNC_CODE(F_BOOKMARK_SET, 30970)	//ブックマーク設定・解除						なし
FUNC_CODE(F_BOOKMARK_NEXT, 30971)	//次のブックマークへ							なし
FUNC_CODE(F_BOOKMARK_PREV, 30972)	//前のブックマークへ							なし
FUNC_CODE(F_BOOKMARK_RESET, 30973)	//ブックマークの全解除							なし
FUNC_CODE(F_BOOKMARK_VIEW, 30974)	//ブックマークの一覧							int nAction
FUNC_CODE(F_BOOKMARK_PATTERN, 30975)	//パターンに一致する行をマーク					なし
FUNC_CODE(F_DIFF_DIALOG, 30976)	//DIFF差分表示(ダイアログ)						なし
FUNC_CODE(F_DIFF, 30977)	//DIFF差分表示									const WCHAR* szTmpFile2, int nFlgOpt
FUNC_CODE(F_DIFF_NEXT, 30978)	//次の差分へ									なし
FUNC_CODE(F_DIFF_PREV, 30979)	//前の差分へ									なし
FUNC_CODE(F_DIFF_RESET, 30980)	//差分の全解除									なし
FUNC_CODE(F_ISEARCH_NEXT, 30981)	//前方インクリメンタルサーチ					？
FUNC_CODE(F_ISEARCH_PREV, 30982)	//後方インクリメンタルサーチ					？
FUNC_CODE(F_ISEARCH_REGEXP_NEXT, 30983)	//前方正規表現インクリメンタルサーチ		？
FUNC_CODE(F_ISEARCH_REGEXP_PREV, 30984)	//後方正規表現インクリメンタルサーチ		？
FUNC_CODE(F_ISEARCH_MIGEMO_NEXT, 30985)	//前方MIGEMOインクリメンタルサーチ			？
FUNC_CODE(F_ISEARCH_MIGEMO_PREV, 30986)	//後方MIGEMOインクリメンタルサーチ			？
FUNC_CODE(F_FUNCLIST_NEXT, 30988)	//次の関数リストマークへ						なし
FUNC_CODE(F_FUNCLIST_PREV, 30989)	//前の関数リストマークへ						なし
FUNC_CODE(F_FILETREE, 30990)	//ファイルツリー								なし

// モード切り替え系 
FUNC_CODE(F_CHGMOD_INS, 31001)	//挿入／上書きモード切り替え			なし
FUNC_CODE(F_CHG_CHARSET, 31010)	//文字コードセット指定					
FUNC_CODE(F_CHGMOD_EOL_CRLF, 31081)	//入力改行コード指定(CRLF)				なし
FUNC_CODE(F_CHGMOD_EOL_LF, 31082)	//入力改行コード指定(LF)				なし
FUNC_CODE(F_CHGMOD_EOL_CR, 31083)	//入力改行コード指定(CR)				なし
FUNC_CODE(F_CHGMOD_EOL_NEL, 31084)	//入力改行コード指定(NEL)				なし
FUNC_CODE(F_CHGMOD_EOL_PS, 31085)	//入力改行コード指定(PS)				なし
FUNC_CODE(F_CHGMOD_EOL_LS, 31086)	//入力改行コード指定(LS)				なし
FUNC_CODE(F_CANCEL_MODE, 31099)	//各種モードの取り消し					なし

// 設定系 
FUNC_CODE(F_SHOWTOOLBAR, 31100)	//ツールバーの表示						なし
FUNC_CODE(F_SHOWFUNCKEY, 31101)	//ファンクションキーの表示 				なし
FUNC_CODE(F_SHOWSTATUSBAR, 31102)	//ステータスバーの表示 					なし
FUNC_CODE(F_SHOWTAB, 31103)	//タブの表示							なし
FUNC_CODE(F_SHOWMINIMAP, 31104)	//ミニマップの表示						なし
FUNC_CODE(F_TYPE_LIST, 31110)	//タイプ別設定一覧 						なし
FUNC_CODE(F_OPTION_TYPE, 31111)	//タイプ別設定 							なし
FUNC_CODE(F_OPTION, 31112)	//共通設定 								なし
FUNC_CODE(F_FAVORITE, 31113)	//履歴の管理							なし
FUNC_CODE(F_FONT, 31120)	// フォント設定							なし
FUNC_CODE(F_SETFONTSIZE, 31121)	// フォントサイズ設定					int fontSize, int shift, int mode
FUNC_CODE(F_SETFONTSIZEUP, 31122)	// フォントサイズ拡大					なし
FUNC_CODE(F_SETFONTSIZEDOWN, 31123)	// フォントサイズ縮小					なし
FUNC_CODE(F_WRAPWINDOWWIDTH, 31140)	// 現在のウィンドウ幅で折り返し			なし
FUNC_CODE(F_TMPWRAPNOWRAP, 31141)	// 折り返さない（一時設定）				なし
FUNC_CODE(F_TMPWRAPSETTING, 31142)	// 指定桁で折り返す（一時設定）			なし
FUNC_CODE(F_TMPWRAPWINDOW, 31143)	// 右端で折り返す（一時設定）			なし
FUNC_CODE(F_SELECT_COUNT_MODE, 31144)	// 文字カウントの方法を取得、設定する	int nMode

FUNC_CODE(F_TYPE_SCREEN, 31115)	// タイプ別設定『スクリーン』			？
FUNC_CODE(F_TYPE_COLOR, 31116)	// タイプ別設定『カラー』				？
FUNC_CODE(F_TYPE_WINDOW, 31114)	// タイプ別設定『ウィンドウ』			？
FUNC_CODE(F_TYPE_HELPER, 31117)	// タイプ別設定『支援』					？
FUNC_CODE(F_TYPE_REGEX_KEYWORD, 31118)	// タイプ別設定『正規表現キーワード』	？
FUNC_CODE(F_TYPE_KEYHELP, 31119)	// タイプ別設定『キーワードヘルプ』		？
FUNC_CODE(F_OPTION_GENERAL, 32000)	// 共通設定『全般』 					？
FUNC_CODE(F_OPTION_WINDOW, 32001)	// 共通設定『ウィンドウ』				？ 
FUNC_CODE(F_OPTION_EDIT, 32002)	// 共通設定『編集』 					？
FUNC_CODE(F_OPTION_FILE, 32003)	// 共通設定『ファイル』 				？
FUNC_CODE(F_OPTION_BACKUP, 32004)	// 共通設定『バックアップ』				？
FUNC_CODE(F_OPTION_FORMAT, 32005)	// 共通設定『書式』						？
//FUNC_CODE(F_OPTION_URL, 32006)	// 共通設定『クリッカブルURL』			？
FUNC_CODE(F_OPTION_GREP, 32007)	// 共通設定『Grep』						？
FUNC_CODE(F_OPTION_KEYBIND, 32008)	// 共通設定『キー割り当て』				？
FUNC_CODE(F_OPTION_CUSTMENU, 32009)	// 共通設定『カスタムメニュー』			？
FUNC_CODE(F_OPTION_TOOLBAR, 32010)	// 共通設定『ツールバー』				？
FUNC_CODE(F_OPTION_KEYWORD, 32011)	// 共通設定『強調キーワード』			？
FUNC_CODE(F_OPTION_HELPER, 32012)	// 共通設定『支援』						？
FUNC_CODE(F_OPTION_MACRO, 32013)	// 共通設定『マクロ』					？
FUNC_CODE(F_OPTION_FNAME, 32014)	// 共通設定『ファイル名表示』			？
FUNC_CODE(F_OPTION_TAB, 32015)	// 共通設定『タブ』						？
FUNC_CODE(F_OPTION_STATUSBAR, 32016)	// 共通設定『ステータスバー』			？
FUNC_CODE(F_OPTION_PLUGIN, 32017)	// 共通設定『プラグイン』				？
FUNC_CODE(F_OPTION_MAINMENU, 32018)	// 共通設定『メインメニュー』			？

// マクロ系
FUNC_CODE(F_RECKEYMACRO, 31250)	// キーマクロの記録開始／終了		なし
FUNC_CODE(F_SAVEKEYMACRO, 31251)	// キーマクロの保存					なし
FUNC_CODE(F_LOADKEYMACRO, 31252)	// キーマクロの読み込み				なし
FUNC_CODE(F_EXECKEYMACRO, 31253)	// キーマクロの実行					なし
FUNC_CODE(F_EXECEXTMACRO, 31254)	// 名前を指定してマクロ実行			const WCHAR* command
FUNC_CODE(F_EXECMD_DIALOG, 31270)	// 外部コマンド実行					const WCHAR* command
FUNC_CODE(F_EXECMD, 31271)	// 外部コマンド実行					const WCHAR* command

// ウィンドウ系
FUNC_CODE(F_SPLIT_V, 31310)	//上下に分割								なし
FUNC_CODE(F_SPLIT_H, 31311)	//左右に分割								なし
FUNC_CODE(F_SPLIT_VH, 31312)	//縦横に分割								なし
FUNC_CODE(F_WINCLOSE, 31320)	//閉じる									なし
FUNC_CODE(F_WIN_CLOSEALL, 31321)	//すべて閉じる								なし
FUNC_CODE(F_CASCADE, 31330)	//重ねて表示								なし
FUNC_CODE(F_TILE_V, 31331)	//上下に並べて表示							なし
FUNC_CODE(F_TILE_H, 31332)	//左右に並べて表示							なし
FUNC_CODE(F_BIND_WINDOW, 31333)	//グループ化								なし
FUNC_CODE(F_TOPMOST, 31334)	//常に手前に表示							int top
FUNC_CODE(F_NEXTWINDOW, 31340)	//次のウィンドウ							？
FUNC_CODE(F_PREVWINDOW, 31341)	//前のウィンドウ							？
FUNC_CODE(F_WINLIST, 31336)	//ウィンドウ一覧							なし
FUNC_CODE(F_DLGWINLIST, 31337)	//ウィンドウ一覧ダイアログ					なし
FUNC_CODE(F_MAXIMIZE_V, 31350)	//縦方向に最大化							なし
FUNC_CODE(F_MINIMIZE_ALL, 31351)	//すべて最小化								なし
FUNC_CODE(F_MAXIMIZE_H, 31352)	//横方向に最大化							なし
FUNC_CODE(F_REDRAW, 31360)	//再描画									なし
FUNC_CODE(F_WIN_OUTPUT, 31370)	//アウトプットウィンドウ表示				なし
FUNC_CODE(F_GROUPCLOSE, 31380)	// グループを閉じる							なし
FUNC_CODE(F_NEXTGROUP, 31381)	// 次のグループ								なし
FUNC_CODE(F_PREVGROUP, 31382)	// 前のグループ								なし
FUNC_CODE(F_TAB_MOVERIGHT, 31383)	// タブを右に移動							なし
FUNC_CODE(F_TAB_MOVELEFT, 31384)	// タブを左に移動							なし
FUNC_CODE(F_TAB_SEPARATE, 31385)	// 新規グループ								なし
FUNC_CODE(F_TAB_JOINTNEXT, 31386)	// 次のグループに移動						なし
FUNC_CODE(F_TAB_JOINTPREV, 31387)	// 前のグループに移動						なし
FUNC_CODE(F_TAB_CLOSEOTHER, 31388)	// このタブ以外を閉じる						なし
FUNC_CODE(F_TAB_CLOSELEFT, 31389)	// 左をすべて閉じる							なし
FUNC_CODE(F_TAB_CLOSERIGHT, 31390)	// 右をすべて閉じる							なし


// 支援
FUNC_CODE(F_HOKAN, 31430)	// 入力補完											なし
FUNC_CODE(F_TOGGLE_KEY_SEARCH, 31431)	// キーワードヘルプ自動表示							int option
FUNC_CODE(F_HELP_CONTENTS, 31440)	// ヘルプ目次										なし
FUNC_CODE(F_HELP_SEARCH, 31441)	// ヘルプキーワード検索								なし
FUNC_CODE(F_MENU_ALLFUNC, 31445)	// コマンド一覧										なし
FUNC_CODE(F_EXTHELP1, 31450)	// 外部ヘルプ１										なし
FUNC_CODE(F_EXTHTMLHELP, 31451)	// 外部HTMLヘルプ									const WCHAR* helpfile, const WCHAR* keyword
FUNC_CODE(F_ABOUT, 31455)	// バージョン情報									なし


//	Jul. 4, 2000 genta
FUNC_CODE(F_USERMACRO_0, 31600)	// 登録マクロ開始


// カスタムメニュー
FUNC_CODE(F_MENU_RBUTTON, 31580)	// 右クリックメニュー		なし
FUNC_CODE(F_CUSTMENU_1, 31501)	// カスタムメニュー1		なし
FUNC_CODE(F_CUSTMENU_2, 31502)	// カスタムメニュー2		なし
FUNC_CODE(F_CUSTMENU_3, 31503)	// カスタムメニュー3		なし
FUNC_CODE(F_CUSTMENU_4, 31504)	// カスタムメニュー4		なし
FUNC_CODE(F_CUSTMENU_5, 31505)	// カスタムメニュー5		なし
FUNC_CODE(F_CUSTMENU_6, 31506)	// カスタムメニュー6		なし
FUNC_CODE(F_CUSTMENU_7, 31507)	// カスタムメニュー7		なし
FUNC_CODE(F_CUSTMENU_8, 31508)	// カスタムメニュー8		なし
FUNC_CODE(F_CUSTMENU_9, 31509)	// カスタムメニュー9		なし
FUNC_CODE(F_CUSTMENU_10, 31510)	// カスタムメニュー10		なし
FUNC_CODE(F_CUSTMENU_11, 31511)	// カスタムメニュー11		なし
FUNC_CODE(F_CUSTMENU_12, 31512)	// カスタムメニュー12		なし
FUNC_CODE(F_CUSTMENU_13, 31513)	// カスタムメニュー13		なし
FUNC_CODE(F_CUSTMENU_14, 31514)	// カスタムメニュー14		なし
FUNC_CODE(F_CUSTMENU_15, 31515)	// カスタムメニュー15		なし
FUNC_CODE(F_CUSTMENU_16, 31516)	// カスタムメニュー16		なし
FUNC_CODE(F_CUSTMENU_17, 31517)	// カスタムメニュー17		なし
FUNC_CODE(F_CUSTMENU_18, 31518)	// カスタムメニュー18		なし
FUNC_CODE(F_CUSTMENU_19, 31519)	// カスタムメニュー19		なし
FUNC_CODE(F_CUSTMENU_20, 31520)	// カスタムメニュー20		なし
FUNC_CODE(F_CUSTMENU_21, 31521)	// カスタムメニュー21		なし
FUNC_CODE(F_CUSTMENU_22, 31522)	// カスタムメニュー22		なし
FUNC_CODE(F_CUSTMENU_23, 31523)	// カスタムメニュー23		なし
FUNC_CODE(F_CUSTMENU_24, 31524)	// カスタムメニュー24		なし
FUNC_CODE(F_CUSTMENU_LAST, F_CUSTMENU_24)

FUNC_CODE(F_CUSTMENU_BASE, 31500)	// カスタムメニュー基準番号

// その他
//FUNC_CODE(F_SENDMAIL, 31570)		// メール送信	//Oct. 17, 2000 JEPRO メール機能は死んでいるのでコメントアウトにした

//	Windows 95の制約により，WM_COMMANDで使う機能番号として32768以上の値を用いることができません．
//	メニュー等で使われないマクロ専用のコマンドにはそれ以上の値を割り当てましょう．

//	メニューからは直接呼ばれないが、他のIDから間接的に呼ばれる機能
FUNC_CODE(F_MENU_NOT_USED_FIRST, 32768)
FUNC_CODE(F_CHGMOD_EOL, 32800)		// 入力改行コード指定						enumEOLType e
FUNC_CODE(F_SET_QUOTESTRING, 32801)		// 共通設定: 引用符の設定					const WCHAR* quotestr
FUNC_CODE(F_TRACEOUT, 32802)		// マクロ用アウトプットウインドウに出力		const WCHAR* outputstr, int nFlgOpt
FUNC_CODE(F_PUTFILE, 32803)		// 作業中ファイルの一時出力 2006.12.10 maru
FUNC_CODE(F_INSFILE, 32804)		// キャレット位置にファイル挿入 2006.12.10 maru
FUNC_CODE(F_TEXTWRAPMETHOD, 32805)		// テキストの折り返し方法					なし
FUNC_CODE(F_INSBOXTEXT, 32806)		// 矩形テキスト挿入
FUNC_CODE(F_MOVECURSOR, 32807)		// カーソル移動
FUNC_CODE(F_MOVECURSORLAYOUT, 32808)		// カーソル移動(レイアウト)
FUNC_CODE(F_STATUSMSG, 32809)		// ステータスメッセージ
FUNC_CODE(F_MSGBEEP, 32810)		// ビープ音
FUNC_CODE(F_CHANGETYPE, 32811)		// タイプ別設定一時適用						int nTypeIndex
FUNC_CODE(F_FILEOPEN2, 32812)		// 開く2									const WCHAR* filename, ECodeType nCharCode, bool bViewMode, const WCHAR* defaultName
FUNC_CODE(F_COMMITUNDOBUFFER, 32813)	// OpeBlKコミット
FUNC_CODE(F_ADDREFUNDOBUFFER, 32814)	// OpeBlK AddRef
FUNC_CODE(F_SETUNDOBUFFER, 32815)	// OpeBlK Release
FUNC_CODE(F_APPENDUNDOBUFFERCURSOR, 32816)	// OpeBlK にカーソル位置を追加
FUNC_CODE(F_CLIPBOARDEMPTY, 32817)		// クリップボードクリア
FUNC_CODE(F_SETVIEWTOP, 32818)		// ビューの上の行数を設定					CLayoutYInt nLineNumber
FUNC_CODE(F_SETVIEWLEFT, 32819)		// ビューの左端の桁数を設定					CLayoutXInt nColumnIndex


FUNC_CODE(F_FUNCTION_FIRST, 40000)	// 2003-02-21 鬼 これ以上だと関数

FUNC_CODE(F_GETFILENAME, 40001)	// 編集中のファイル名を取得する
FUNC_CODE(F_GETSAVEFILENAME, 40018)	// 保存時のファイル名を取得する	// 2006.09.04 ryoji
FUNC_CODE(F_GETSELECTED, 40002)	// 選択範囲の取得
FUNC_CODE(F_EXPANDPARAMETER, 40003)	// コマンドラインパラメータ展開
FUNC_CODE(F_GETLINESTR, 40004)	// 指定行論理データを取得する
FUNC_CODE(F_GETLINECOUNT, 40005)	// 論理行数を取得する
FUNC_CODE(F_CHGTABWIDTH, 40006)	// タブサイズを取得、設定する
FUNC_CODE(F_ISTEXTSELECTED, 40007)	// テキストが選択されているか
FUNC_CODE(F_GETSELLINEFROM, 40008)	// 選択開始行の取得
FUNC_CODE(F_GETSELCOLUMNFROM, 40009)	// 選択開始桁の取得
FUNC_CODE(F_GETSELLINETO, 40010)	// 選択終了行の取得
FUNC_CODE(F_GETSELCOLUMNTO, 40011)	// 選択終了桁の取得
FUNC_CODE(F_ISINSMODE, 40012)	// 挿入／上書きモードの取得
FUNC_CODE(F_GETCHARCODE, 40013)	// 文字コード取得
FUNC_CODE(F_GETLINECODE, 40014)	// 改行コード取得
FUNC_CODE(F_ISPOSSIBLEUNDO, 40015)	// Undo可能か調べる
FUNC_CODE(F_ISPOSSIBLEREDO, 40016)	// Redo可能か調べる
FUNC_CODE(F_CHGWRAPCOLUMN, 40017)	// 折り返し桁を取得、設定する 2008.06.19 ryoji
FUNC_CODE(F_ISCURTYPEEXT, 40019)	// 指定した拡張子が現在のタイプ別設定に含まれているかどうかを調べる 2006.09.04 ryoji
FUNC_CODE(F_ISSAMETYPEEXT, 40020)	// ２つの拡張子が同じタイプ別設定に含まれているかどうかを調べる 2006.09.04 ryoji
FUNC_CODE(F_INPUTBOX, 40021)	// テキスト入力ダイアログの表示
FUNC_CODE(F_MESSAGEBOX, 40023)	// メッセージボックスの表示
FUNC_CODE(F_ERRORMSG, 40024)	// メッセージボックス（エラー）の表示
FUNC_CODE(F_WARNMSG, 40025)	// メッセージボックス（警告）の表示
FUNC_CODE(F_INFOMSG, 40026)	// メッセージボックス（情報）の表示
FUNC_CODE(F_OKCANCELBOX, 40027)	// メッセージボックス（確認：OK／キャンセル）の表示
FUNC_CODE(F_YESNOBOX, 40028)	// メッセージボックス（確認：はい／いいえ）の表示
FUNC_CODE(F_COMPAREVERSION, 40029)	// バージョン番号の比較
FUNC_CODE(F_MACROSLEEP, 40030)	// 指定した時間（ミリ秒）停止
FUNC_CODE(F_FILEOPENDIALOG, 40031)	// ファイルを開くダイアログの表示
FUNC_CODE(F_FILESAVEDIALOG, 40032)	// ファイルを保存ダイアログの表示
FUNC_CODE(F_FOLDERDIALOG, 40033)	// フォルダーを開くダイアログの表示
FUNC_CODE(F_GETCLIPBOARD, 40034)	// クリップボードの文字列を取得
FUNC_CODE(F_SETCLIPBOARD, 40035)	// クリップボードに文字列を設定
FUNC_CODE(F_LAYOUTTOLOGICLINENUM, 40036)	// ロジック行番号取得
FUNC_CODE(F_LOGICTOLAYOUTLINENUM, 40037)	// レイアウト行番号取得
FUNC_CODE(F_LINECOLUMNTOINDEX, 40038)	// ロジック桁番号取得
FUNC_CODE(F_LINEINDEXTOCOLUMN, 40039)	// レイアウト桁番号取得
FUNC_CODE(F_GETCOOKIE, 40040)	// Cookie取得
FUNC_CODE(F_GETCOOKIEDEFAULT, 40041)	// Cookie取得デフォルト値
FUNC_CODE(F_SETCOOKIE, 40042)	// Cookie設定
FUNC_CODE(F_DELETECOOKIE, 40043)	// Cookie削除
FUNC_CODE(F_GETCOOKIENAMES, 40044)	// Cookie名前取得
FUNC_CODE(F_SETDRAWSWITCH, 40045)	// 再描画スイッチ設定
FUNC_CODE(F_GETDRAWSWITCH, 40046)	// 再描画スイッチ取得
FUNC_CODE(F_ISSHOWNSTATUS, 40047)	// ステータスウィンドウが表示されているか
FUNC_CODE(F_GETSTRWIDTH, 40048)	// 文字列幅取得
FUNC_CODE(F_GETSTRLAYOUTLENGTH, 40049)	// 文字列のレイアウト幅取得
FUNC_CODE(F_GETDEFAULTCHARLENGTH, 40050)	// デフォルト文字幅の取得
FUNC_CODE(F_ISINCLUDECLIPBOARDFORMAT, 40051)	// クリップボードの形式取得
FUNC_CODE(F_GETCLIPBOARDBYFORMAT, 40052)	// クリップボードの指定形式で取得
FUNC_CODE(F_SETCLIPBOARDBYFORMAT, 40053)	// クリップボードの指定形式で設定
FUNC_CODE(F_GETLINEATTRIBUTE, 40054)		// 行属性取得
FUNC_CODE(F_ISTEXTSELECTINGLOCK, 40055)	// 選択状態のロックを取得
FUNC_CODE(F_GETVIEWLINES, 40056)	// ビューの行数取得
FUNC_CODE(F_GETVIEWCOLUMNS, 40057)	// ビューの列数取得
FUNC_CODE(F_CREATEMENU, 40058)	// メニュー作成
FUNC_CODE(F_GETVIEWTOP, 40059)	// 画面に表示される一番上の行番号を取得
FUNC_CODE(F_CHGINSSPACE, 40060)	// SPACEの挿入を取得、設定する

//	= 2005,.01.10 genta ISearch用補助コード
//	2007.07.07 genta 16bit以内に収めないと状況コードと衝突するのでコードを変更
FUNC_CODE(F_ISEARCH_ADD_CHAR, 0xC001)	//	Incremental Searchへ1文字へ追加
FUNC_CODE(F_ISEARCH_ADD_STR, 0xC002)	//	Incremental Searchへ文字列へ追加
FUNC_CODE(F_ISEARCH_DEL_BACK, 0xC003)	//	Incremental Searchの末尾から1文字削除

#if defined(FUNC_CODE_DEFINE)
#elif defined(FUNC_CODE_ENUM)
}; //end of enum EFunction
#else
#endif
